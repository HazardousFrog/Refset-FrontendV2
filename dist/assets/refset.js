eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"refset/adapters/login\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    	\n    	authenticate: function(username, password) \n    	{ \n    	    Ember.Logger.log(\'adapters.login:authenticate\');\n\n    	    var data = {};\n    		data.username  = username;\n    		data.password  = password;\n    		data.queryName = RefsetENV.APP.authenticationActionSoapName;\n\n    		var result = ajax(RefsetENV.APP.authenticationUrl, {type:\'post\', data: data}).then(function(success)\n    		{\n    			success.authenticated = true;\n    			\n    			return success;\n    		},\n    		function (error)\n    		{\n    			var result = {};\n    			\n    			result.authenticated = false;\n    			result.error = (error.errorThrown === \"Unauthorized\") ? \'Username and/or password not recognised\' : \'Error accessing the authentication server\';\n    			\n    			return result; \n    		});	\n    		\n    		return result;\n    	},\n     \n    	isPermittedToUseRefset: function(userId)\n    	{\n    		Ember.Logger.log(\'adapters.login:isPermittedToUseRefset\');\n\n    		var result = ajax(RefsetENV.APP.appsUrl.replace(\'__USER_ID__\', userId), {type:\'get\'}).then(function(permittedAppsResult)\n    		{\n    			return $.inArray(RefsetENV.APP.thisApplicationName,permittedAppsResult.apps) === -1 ? 0 : 1;\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"adapters.login:isPermittedToUseRefset (error)\",error);\n    			return -1;\n    		});	\n    		\n    		return result;\n    	},\n    	\n    });\n  });//# sourceURL=refset/adapters/login.js");

;eval("define(\"refset/adapters/refsets\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    	\n    	getHeaders : function(user)\n    	{\n    		var headers =\n    		{\n    			\'X-REFSET-PRE-AUTH-USERNAME\'	: user.name,\n    			\'X-REFSET-PRE-AUTH-TOKEN\'		: user.token\n    		};\n\n    		return headers;\n    	}, \n    	\n    	findAll : function (user)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:findAll (user)\",user);\n    		\n    		return ajax(RefsetENV.APP.refsetApiBaseUrl, {headers:this.getHeaders(user)}).then(function(result)\n    		{\n    			if (result.meta.noOfRecords !== 0)\n    			{					\n    				return result.content.refsets;\n    			}\n    			else\n    			{\n    				Ember.Logger.log(\"Didn\'t get any data from server...\",result.meta.message);\n    				return {dataError : true};\n    			}\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"refsets findAll error\",error);\n    			return [];	\n    		});\n    	},\n    	\n    	find : function (user,id)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:find (user,id)\",user,id);\n    		\n    		var _this = this;\n    		\n    		var result = ajax(\'x\' + RefsetENV.APP.refsetApiBaseUrl + \'/\' + id, {headers:this.getHeaders(user),timeout: 5000}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response) \n    		{\n    			Ember.Logger.log(\"adapters.refsets:find (error)\",response);\n\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	returnErrorResponse : function(response)\n    	{\n    		if (typeof response.jqXHR.responseJSON !== \"undefined\")\n    		{\n    			// We have an error generated by the API\n    			return {meta:response.jqXHR.responseJSON.meta};\n    		}\n    		else\n    		{\n    			// We\'ve failed to speak to the API...\n    			return {meta:{errorInfo:{message:response.jqXHR.statusText,code:response.jqXHR.status.toString()}}};\n    		}\n    	},\n    	\n    	create : function (user,refset)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:create\",user,refset);\n    		\n    		var jsonFormatRefset = JSON.stringify(refset);\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/new\', {headers:this.getHeaders(user), type:\'post\', data: jsonFormatRefset, processData: false, contentType: \'application/json\'}).then(function(result)\n    		{\n    			return result;	\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"create refset error\",error);\n    			return {authError : true};\n\n    			// Needs more work here.  A failure might not just be an authenticate error...\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	update : function (user,refset)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:update\",user,refset);\n    		\n    		var jsonFormatRefset = JSON.stringify(refset);\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/update\', {headers:this.getHeaders(user), type:\'post\', data: jsonFormatRefset, processData: false, contentType: \'application/json\'}).then(function(result)\n    		{\n    			return result;	\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"update refset error\",error);\n    			return {authError : true};\n    			\n    			// Needs more work here.  A failure might not just be an authenticate error...\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	addMember : function (user,refsetId,referenceComponentId)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:addMember (user,refsetId,referenceComponentId)\",user,refsetId,referenceComponentId);\n\n    		var member = {referenceComponentId : referenceComponentId, active:true};\n    			\n    		var jsonFormatMemberData = JSON.stringify(member);\n    		\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + refsetId + \'/add/member\', {headers:this.getHeaders(user), method:\"post\", data: jsonFormatMemberData, processData: false, contentType: \'application/json\'}).then(function(result)\n    		{			\n    			Ember.Logger.log(\"add member result\",result);\n    			return result;\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"adapters.refsets:addMember error\",error);\n    			return [];\n    		});\n\n    		return result;	\n    	},\n    	\n    	getRefsetExport : function(user,id)\n    	{\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + id + \'/export\', {headers:this.getHeaders(user)}).then(function(result){\n    			return result;	\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"refsets getRefsetExport error\",error);\n    			return {authError : true};\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	deleteRefset : function(user,id)\n    	{\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/delete/\' + id , {headers:this.getHeaders(user), method:\"delete\", processData: false, contentType: \'application/json\'}).then(function(result){\n    			Ember.Logger.log(\"refsets deleteRefset result\",result);\n    			return true;	\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"refsets deleteRefset error\",error);\n    			return {authError : true};\n    		});	\n    		\n    		return result;\n\n    	},\n    	\n    });\n  });//# sourceURL=refset/adapters/refsets.js");

;eval("define(\"refset/adapters/simple-members\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    	\n    	getHeaders : function(user)\n    	{\n    		var headers =\n    		{\n    			\'X-REFSET-PRE-AUTH-USERNAME\'	: user.name,\n    			\'X-REFSET-PRE-AUTH-TOKEN\'		: user.token\n    		};\n\n    		return headers;\n    	}, \n    	\n    	findList : function (user,idArray)\n    	{\n    		Ember.Logger.log(\"adapters.simple-members:findList\");\n    		\n    		var jsonFormatIdArray = JSON.stringify(idArray);\n    	\n    		var result = ajax(RefsetENV.APP.conceptsApiBaseUrl, {headers:this.getHeaders(user), method:\"post\", data: jsonFormatIdArray, processData: false, contentType: \'application/json\'}).then(function(result)\n    		{	\n    			var response = {};\n\n    			if (result.meta.message === \"Success\")\n    			{\n    				response.data 	= result.content.concepts;\n    				response.status = true;\n    			}\n    			else\n    			{\n    				Ember.Logger.log(\"adapters.simple-members:findList error\",result.meta.message);\n\n    				response.error 	= result.meta.message;\n    				response.status = false;\n    			}\n    			\n    			return response;\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"adapters.simple-members:findList error\",error);\n\n    			var response 	= {};\n    			response.status	= false;\n    			response.error	= error;\n\n    			return response;\n    		});\n\n    		return result;\n\n    	},\n    	\n    	find : function (user,id)\n    	{\n    		Ember.Logger.log(\"adapters.simple-members:find\",user,id);\n    		\n    		var result = ajax(RefsetENV.APP.conceptsApiBaseUrl + \'/\' + id, {headers:this.getHeaders(user), method:\"get\"}).then(function(result)\n    		{	\n    			var response = {};\n\n    			if (result.meta.message === \"Success\")\n    			{\n    				response.data 	={label: \'concept label goes here\'}; //result.content.concept;\n    				response.status = true;\n    			}\n    			else\n    			{\n    				Ember.Logger.log(\"adapters.simple-members:find error\",result.meta.message);\n\n    				response.error 	= result.meta.message;\n    				response.status = false;\n    			}\n    			\n    			return response;\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"adapters.simple-members:find error\",error);\n\n    			var response 	= {};\n    			response.status	= false;\n    			response.error	= error;\n\n    			return response;\n    		});\n\n    		return result;\n\n    	},\n\n    });\n  });//# sourceURL=refset/adapters/simple-members.js");

;eval("define(\"refset/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'refset\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'refset\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=refset/app.js");

;eval("define(\"refset/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"thisApplicationName\":\"Refset\",\"RegistrationEmail\":\"register@ihtsdo.org\",\"authenticationActionSoapName\":\"getUserByNameAuth\",\"authenticationUrl\":\"https://usermanagement.ihtsdotools.org/security-web/query/\",\"appsUrl\":\"https://usermanagement.ihtsdotools.org/security-web/query/users/__USER_ID__/apps\",\"permissionsUrl\":\"https://usermanagement.ihtsdotools.org/security-web/query/users/__USER_ID__/apps/Refset\",\"passwordResetURL\":\"https://usermanagement.ihtsdotools.org/security-web/requestPwChange.jsp\",\"refsetApiBaseUrl\":\"http://content.ihtsdotools.org:8080/refset/v1.0/refsets\",\"conceptsApiBaseUrl\":\"http://content.ihtsdotools.org:8080/refset/v1.0/snomed/concepts\",\"numItemsPerPage\":10,\"numItemsPerPageDashboard\":5,\"loginExpiry\":20,\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=refset/config/environment.js");

;eval("define(\"refset/controllers/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	needs : [\"login\"],\n    	\n    	user : Ember.computed.alias(\"controllers.login.user\"),\n    	\n    	logoutTimerDisplay 		: Ember.computed.alias(\"controllers.login.logoutTimerDisplay\"),\n    	showLogoutTimer 		: Ember.computed.alias(\"controllers.login.showLogoutTimer\"),\n    	autoLoggedOut			: Ember.computed.alias(\"controllers.login.autoLoggedOut\"),\n    	logoutProgressDisplay	: Ember.computed.alias(\"controllers.login.logoutProgressDisplay\"),\n    	\n    	init : function()\n    	{\n    		window.addEventListener(\"dragover\",function(e)\n    		{\n    			e = e || event;\n    			e.preventDefault();\n    		},false);\n    		window.addEventListener(\"drop\",function(e)\n    		{\n    			e = e || event;\n    			e.preventDefault();\n    		},false);	\n    	},\n    	\n    	actions :\n    	{\n    		showLoginForm: function() \n    		{\n    			var controller = this.get(\'controllers.login\');\n    			controller.showLoginForm();\n    		},\n\n    		showRegistrationForm: function() \n    		{\n    			var controller = this.get(\'controllers.login\');\n    			controller.showRegistrationForm();\n    		},\n\n    		logout : function()\n    		{\n    			var controller = this.get(\'controllers.login\');\n    			controller.logout();\n    		},		\n    	},\n    });\n  });//# sourceURL=refset/controllers/application.js");

;eval("define(\"refset/controllers/dashboard\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    	\n    	needs : [\"data\",\"news\"],\n    	\n    	news 		: Ember.computed.alias(\"controllers.news.latestNews\"),\n    	refsets 	: Ember.computed.alias(\"controllers.data.unpublishedRefsets\"),\n    	\n    });\n  });//# sourceURL=refset/controllers/dashboard.js");

;eval("define(\"refset/controllers/data\", \n  [\"refset/adapters/refsets\",\"refset/adapters/simple-members\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var RefsetsAdapter = __dependency1__[\"default\"];\n    var refsetsAdapter = RefsetsAdapter.create();\n\n    var MembersAdapter = __dependency2__[\"default\"];\n    var membersAdapter = MembersAdapter.create();\n\n    var numAutoServerRetries 		= 4;\n    var autoServerRetryInterval 	= 5; // Seconds\n    var autoServerRetryMultiplier 	= 1.5; // Amount to increase wait period before retrying again.\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    	\n    	needs 				: [\"login\",\"refsets\"],\n    	\n    	refsets 			: [],\n    	unpublishedRefsets	: [],\n    	publishedRefsets	: [],\n    	refset 				: {},\n    	currentRefsetId		: null,\n    	concepts 			: {},\n    	\n    	init : function()\n    	{\n    		Ember.Logger.log(\"controllers.data:init\");\n    		this.getAllRefsets();\n    	},\n    	\n    	getAllRefsets : function()\n    	{\n    		var _this = this;\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		Ember.Logger.log(\"controllers.refsets:getAllRefSets\");\n    	\n    		refsetsAdapter.findAll(user).then(function(result)\n    		{	\n    			if (!result.dataError)\n    			{\n    				var publishedArray 		= [];\n    				var unpublishedArray 	= [];\n    				\n    				_this.refsets.setObjects(result);\n    				\n    				result.map(function(item)\n    				{\n    					if (item.published)\n    					{\n    						publishedArray.push(item);\n    					}\n    					else\n    					{\n    						unpublishedArray.push(item);					\n    					}\n    				});\n    								\n    				var sortedPublishedArray = publishedArray.sort(function(a,b)\n    				{\n    				    return new Date(b.publishedDate) - new Date (a.publishedDate);\n    				});			\n\n    				_this.publishedRefsets.setObjects(sortedPublishedArray);\n    			\n    				var sortedUnpublishedArray = unpublishedArray.sort(function(a,b)\n    				{\n    				    return new Date(b.publishedDate) - new Date (a.publishedDate);\n    				});			\n\n    				_this.unpublishedRefsets.setObjects(sortedUnpublishedArray);\n    			}\n\n    		});\n    	},\n\n    	\n\n    	getRetryWaitPeriod : function(counter)\n    	{\n    		var multiplier = 1;\n    		\n    		for (var c=0;c<counter;c++)\n    		{\n    			multiplier = multiplier * autoServerRetryMultiplier;\n    		}\n    		\n    		return Math.ceil(autoServerRetryInterval * multiplier);\n    	},\n    	\n    	getRefset : function(id,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:getRefset (id,retrying)\",id,retrying);\n\n    		this.set(\"currentRefsetId\",id);\n    		\n    		var _this = this;\n    		var retrying = (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		var refset = refsetsAdapter.find(user,id).then(function(response)\n    		{\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				// Successful response for our request\n    				Ember.Logger.log(\"Successful response for our request\",response);\n    				\n    				_this.set(\"refset\",response.content.refset);\n    				\n    				// Now get member data...\n    				\n    				var idArray = _this.refset.members.map(function(member)\n    				{\n    					return member.referenceComponentId;\n    				});\n    									\n    				membersAdapter.findList(user,idArray).then(function(result)\n    				{\n    					if (result.status)\n    					{\n    						var conceptData = result.data;\n    																\n    						var tempMemberData = _this.refset.members.map(function(member)\n    						{\n    							if (conceptData[member.referenceComponentId] !== null)\n    							{\n    								member.description 		= conceptData[member.referenceComponentId].label;\n    								member.conceptactive 	= conceptData[member.referenceComponentId].active;\n    								member.found 			= true;\n    							}\n    							else\n    							{\n    								member.description 		= \'concept not found\';\n    								member.found 			= false;\n    							}\n    							\n    							return member;\n    						});	\n\n    						_this.refset.members.setObjects(tempMemberData);\n    					}\n    					else\n    					{\n    						Ember.Logger.log(\"result.error\",result.error);\n    					}\n    				});	\n    			}\n    			else\n    			{\n    				var failureResponse = _this.handleRequestFailure(response,\'Refset\',\'getRefset\',[id],retrying);\n    				// Do something with this?\n    			}\n\n    			return response;\n    		});\n    		\n    		this.set(\"refset\",refset);\n    	},\n    	\n    	authenticationStatusChanged : function()\n    	{\n    		this.getAllRefsets();\n    		\n    		// If we are holding a refset then refresh it\n    		if (this.currentRefsetId !== null)\n    		{\n    			this.getRefset(this.currentRefsetId);\n    		}\n    	},\n    	\n    	handleRequestFailure : function(response,resourceType,callbackFn,callbackParams,retrying)\n    	{\n    		// Failed response... check errorInfo.code / message\n    		Ember.Logger.log(\"Failed response for our request (code,message)\",response.meta.errorInfo.code,response.meta.errorInfo.message);\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		var _this = this;\n    		\n    		switch(response.meta.errorInfo.code)\n    		{\n    			case \"401\":\n    			{\n    				if (user.token === null)\n    				{\n    					// User is not logged in, so prompt to login\n    					Bootstrap.GNM.push(\'Authentication Required\',\'The \' + resourceType + \' you have requested is not publically available. You must log in to view it.\', \'warning\');\n    					loginController.showLoginForm();\n    				}\n    				else\n    				{\n    					// User is logged in, but it not permitted to access the requested resource\n    					Bootstrap.GNM.push(\'Not Authorised\',\'You do not have permission to access the \' + resourceType + \' you have requested.\', \'warning\');\n    					\n    			        BootstrapDialog.show({\n    			            title: \'<img src=\"assets/img/login.white.png\"> Not Authorised\',\n    			            closable: false,\n    			            message: \'You do not have permission to access the \' + resourceType + \' you have requested.\',\n    			            buttons: [{\n    			                label: \'OK\',\n    			                action: function(dialog) {\n    			                	// Go to parent route....\n    			                    dialog.close();\n    			                }\n    			            }]\n    			        });\n    				}\n    				\n    				return 401;\n    			}\n\n    			case \"404\":\n    			{\n    				// Not found\n    				Bootstrap.GNM.push(\'Not found\',\'We cannot locate the \' + resourceType + \' you have requested.\', \'warning\');\n\n    				// Need to deal with this in the template as well...report to the user that what they want cannot be found.\n    				\n    				return 404;\n    			}\n    			\n    			default :\n    			{\n    				// Other error, worth retrying...\n    			\n    				if (retrying < numAutoServerRetries)\n    				{\n    					var waitPeriod = _this.getRetryWaitPeriod(retrying);\n    					\n    					Bootstrap.GNM.push(\'Communication Error\',\'Error communicating with the server \' + (++retrying) + \' times. Will retry in \' + waitPeriod + \' seconds.\', \'warning\');\n    					\n    					var retry = Ember.run.later(function()\n    					{\n    						var params = callbackParams;\n    						params.push(retrying);\n                 			return _this[callbackFn].apply(_this,params);\n    					},waitPeriod * 1000);\n    					\n    					return retry;\n    				}\n    				else\n    				{\n    					// Too many errors. Time to prompt the user\n    					Bootstrap.GNM.push(\'Communication Failure\',\'Error communicating with the server. \' + (numAutoServerRetries +1) + \' sucessive attempts have failed.\', \'danger\');\n    					\n    			        BootstrapDialog.show({\n    			            title: \'<img src=\"assets/img/login.white.png\"> Communication Failure\',\n    			            closable: false,\n    			            message: \'<p>There has been a problem communicating with the server.</p><p>We have tried \' + (numAutoServerRetries +1) + \' times already.</p><p>Would you like to keep trying or give up?</p>\',\n    			            buttons: \n    			            [\n    			             	{\n    			             		label: \'Give up\',\n    			             		action: function(dialog)\n    			             		{\n    			             			// Go to parent route.... location.href = \"..\" ?????\n    			             			_this.send(\"goBack\");\n    			             			dialog.close();\n    			             		}\n    			             	},\n    			             	{\n    			             		label: \'Continue Trying\',\n    			             		cssClass: \'btn-primary\',\n    			             		action: function(dialog)\n    			             		{\n    			             			_this[callbackFn].apply(_this,callbackParams);\n    			             			dialog.close();\n    			             		}\n    			             	}\n    			             ]\n    			        });\n    				}\n    				\n    				break;\n    			}\n    		}\n    	}\n    });\n  });//# sourceURL=refset/controllers/data.js");

;eval("define(\"refset/controllers/login\", \n  [\"refset/adapters/login\",\"refset/models/user\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LoginAdapter = __dependency1__[\"default\"];\n    var User = __dependency2__[\"default\"];\n\n    var loginAdapter = LoginAdapter.create();\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	needs 				: [\"refsets\",\"utilities\",\"data\"],\n\n    	loginDialogOpen		: false,			// Indicates that we have an open login dialog window\n    	autoLoggedOut		: false,			// Indicates that the user was logged out automatically through inactivity\n    	loginError			: null,				// Contains any relevant login error message\n    	username			: null,				// Bound to the login form input field\n    	password			: \'\',				// Holds the user\'s password between form entry and the authentication call\n    	user				: User.create(),	// A dummy user record. Overwritten upon login\n    	logoutDialogOpen	: false,			// Are we showing an auto-logout alert?\n    	loginDialogRef		: null,\n\n    	loginExpiryLength 	: RefsetENV.APP.loginExpiry * 60 * 1000, // Setting is in MINUTES, we need milliseconds here. This is the inactivity period before auto logout\n    	\n    	showLogoutTimer		: Ember.computed.lte(\"logoutTimerDisplay\",200),	// Only show the logout progress bar if there are 100 seconds or less left until logout.\n    	\n    	logoutTimerDisplay 	: function() 		// A auto calculated property which returns how many seconds are left until user is automatically logged out\n    	{\n    		return this.getSecondsLeftToAutoLogout();\n    	}.property(\"user\"),\n    	\n    	logoutProgressDisplay : function() 		// A auto calculated property which returns a range of 1-100 for the progress bar showing how long until user is automatically logged out\n    	{\n    		var secondsLeft = this.getSecondsLeftToAutoLogout();\n    		\n    		return (secondsLeft / 2);\n    	}.property(\"user\"),\n    	\n    	showLoginForm : function()\n    	{\n    		var _this = this;\n    		\n    		if (!this.loginDialogOpen)\n    		{\n    			this.set(\"loginDialogOpen\",true);\n    			\n    			var loginFormSource   = $(\"#login-form\").html();\n    			var loginFormTemplate = Handlebars.compile(loginFormSource.replace(/(\\r\\n|\\n|\\r)/gm, \'\'));\n    			var context = {autoLoggedOut: this.autoLoggedOut, username: this.user.name, forgotPasswordLink:RefsetENV.APP.passwordResetURL,timeout:RefsetENV.APP.loginExpiry};\n    			var loginFormHTML = loginFormTemplate(context);\n    			\n    			var loginDialog = BootstrapDialog.show({\n    	            title: \'<img src=\"assets/img/login.white.png\"> Authentication Required\',\n    	            closable: false,\n    	            message: loginFormHTML,\n    	            buttons: \n    	            [\n    	             	{\n    	             		label		: \'Register\',\n    	             		cssClass	: \'btn-default left\',\n    	             		action		: function(dialog)\n    	             		{\n    	             			_this.set(\"loginDialogOpen\",false);\n    	             			dialog.close();\n    	             			_this.showRegistrationForm();\n    	             		}\n    	             	},\n    	             	{\n    	             		label	: \'Continue as a guest\',\n    	             		action	: function(dialog)\n    	             		{\n    	             			_this.set(\"loginDialogOpen\",false);\n    	             			dialog.close();\n    	             		}\n    	             	},\n    	             	{\n    	             		label		: \'Login\',\n    	             		cssClass	: \'btn-primary\',\n    	             		icon		: \'glyphicon glyphicon-user\',\n    	             		id 			: \'submit-btn\',\n    	             		hotkey		: 13, // Enter key\n    	             		action 		: function(dialog)\n    	             		{\n    	             			var btn = this;\n    	             			btn.spin();\n\n    	             			_this.login($(\'#loginFormUsername\').val(),$(\'#loginFormPassword\').val()).then(function(loginResult)\n    	             			{\n    		             			if (loginResult)\n    		             			{\n    		             				_this.set(\"loginDialogOpen\",false);\n    		             				dialog.close();\n    		             			}\n    		             			else\n    		             			{\n    			             			btn.stopSpin();		             									             				\n    		             			}\n    	             			});\n    	             		}\n    	             	}\n    	             ]\n    	        });	\n    			\n    			this.set(\"loginDialogRef\",loginDialog);\n    		}\n    			\n    	},\n    	\n    	login : function(username,password)\n    	{\n    		var _this = this;\n    		\n    		return loginAdapter.authenticate(username,password).then(function(authResult)\n    		{\n    			var user = authResult.user;\n    			\n    			if (authResult.authenticated)\n    			{\n    				return loginAdapter.isPermittedToUseRefset(user.name).then(function(permissionResult)\n    				{\n    					if (permissionResult)\n    					{\n    						user.autoLogoutTime = new Date(new Date().getTime() + _this.loginExpiryLength);\n    						user.loginDeclined	= false;\n\n    						_this.saveUserToLocalStore(user);\n             				_this.initUserInteractionEvents();\n    						\n    						var dataController = _this.get(\'controllers.data\');\n    						dataController.authenticationStatusChanged();\n\n    						Bootstrap.GNM.push(\'Authenticated\',\'You have sucessfully logged in\', \'info\');\n    					}\n    					else\n    					{\n    						Bootstrap.GNM.push(\'Unauthorised\',\'You do not have permission to acccess this application\', \'warning\');\n    					}\n    					return permissionResult;\n    				});			\n    			}\n    			else\n    			{\n    				Bootstrap.GNM.push(\'Unauthorised\',\'Your username and/or password were not accepted\', \'warning\');\n    				return false;\n    			}\n    			\n    		});\n    	},\n    	\n    	// Log the user out of the app\n    	logout : function()\n    	{\n    		var user = this.user;\n    		\n    		// This has the effect of logging the user out\n    		user.token = null;\n\n    		// Store our modified user record in the Local Store\n    		this.saveUserToLocalStore(user);\n\n    		// Since we changed authentication state, we need to refresh our list of refsets.\n    		// This will be moved to a common data refresh handler at a later date\n    		var dataController = this.get(\'controllers.data\');\n    		dataController.authenticationStatusChanged();\n    		\n    		// No need to monitor user activity once they have been logged out\n    		this.stopUserInteractionEvents();\n    		\n    		// Show the login form\n    		this.showLoginForm();\n    	},\n    	\n    	registerButtons : \n    	[\n    		Ember.Object.create({title: \'Cancel\', clicked: \'closeRegistrationModal\'}),\n       		Ember.Object.create({title: \'Register\', clicked:\'registerUser\', type:\"primary\"})\n    	],\n    	\n    	// Show the registration modal dialog\n    	showRegistrationForm: function() \n    	{\n    		Bootstrap.ModalManager.open(\'registrationModal\', \'<img src=\"assets/img/login.png\"> Snomed CT\', \'registration\', this.registerButtons, this); // modal ID, title, template (hbs), buttons, controller (usually this)\n    	},\n    	\n       	   \n       	init : function()\n    	{	\n       	   	// When we start up we want to check the Local Store to see if the user may already be logged in\n    		this.monitorLoginViaLocalStore();\n    		\n    		// Show the login form if needed\n    		if(this.user.token === null && !this.user.loginDeclined)\n    		{\n    			this.showLoginForm();\n    		}\n    	},\n\n    	// Calculates the number of seconds of inactivity remaining before the user will be auto logged out\n    	getSecondsLeftToAutoLogout : function()\n    	{\n    		var autoLogoutTime 		= new Date(this.user.autoLogoutTime);\n    		var timeLeftToLogout 	= parseInt((autoLogoutTime.getTime() - new Date().getTime()) /1000); // seconds\n\n    		if (this.user.token !== null && !this.logoutDialogOpen && timeLeftToLogout < 195)\n    		{\n    			this.set(\"logoutDialogOpen\",true);\n    			Bootstrap.ModalManager.open(\'logoutModal\', \'<img src=\"assets/img/login.png\"> Snomed CT\', \'logout-alert\', this.logoutButtons, this); // modal ID, title, template (hbs), buttons, controller (usually this)\n    		}\n\n    		return timeLeftToLogout;\n    	},\n\n    	// Check the Local Store every second to see if out user record has been overwritten by another window\n    	monitorLoginViaLocalStore : function()\n    	{\n    		var controller 	= this.get(\'controllers.utilities\');\n    		var userData 	= controller.getDataFromSessionStore(\'user\');\n\n    		if (userData.status === \'ok\' && userData.data !== null)\n    		{\n    			// If user not logged in here, but has logged in on another window then we need to act as if the user has logged in here\n    			if (this.user.token === null && userData.data.token !== null)\n    			{\n    				this.initUserInteractionEvents();\n    				this.send(\'closeLoginModal\');\n    			}\n    			\n    			// Save the user record from the Local Store into this controller\n    			this.set(\"user\",userData.data);\n\n    			// If we do not already have a username, then use the one from the Store. We only do this once, otherwise it will prevent you entering a username in the login form since it is bound to this value.\n    			if (this.name === null)\n    			{\n    				this.set(\"name\",userData.data.name);				\n    			}\n    		}\n\n    		// Calculate how long the user has been inactive\n    		var timeLeftToAutoLogout = this.getSecondsLeftToAutoLogout();\n    		\n    		// If user is currently logged in and inactivity period has been exceeded then log the user out\n    		if (this.user.token !== null && timeLeftToAutoLogout <= 0)\n    		{\n    			// Enable the \"you\'ve been auto logged out\" message in the login dialog\n    			Bootstrap.GNM.push(\'Session Timeout\',\'You have been logged out after \' + RefsetENV.APP.loginExpiry + \' minutes of inactivity\', \'warning\');\n\n    			this.set(\"autoLoggedOut\",true);\n    			this.logout();\n    		}\n    		\n    		var _this = this;\n\n    		// Run this function again in 1000 milliseconds time\n    		Ember.run.later(function()\n    		{\n    			_this.monitorLoginViaLocalStore();\n    		},1000);\n    	},\n    	\n    	// Events handlers to detect ANY user interaction. Used to reset the inactivity timer.\n    	initUserInteractionEvents : function()\n    	{\n    	    $(document).mousemove(function () {\n    			var controller = Refset.__container__.lookup(\"controller:login\");\n    			controller.send(\'resetAutoLogoutTimer\');\n    	    });\n    	    \n    	    $(document).keypress(function () {\n    			var controller = Refset.__container__.lookup(\"controller:login\");\n    			controller.send(\'resetAutoLogoutTimer\');\n    	    });\n    	},\n\n    	// Disable the user interaction event handlers (when user is logged out)\n    	stopUserInteractionEvents : function()\n    	{\n    		// Stop bothering to monitor user events\n    	    $(document).unbind(\'mousemove\');\n    	    $(document).unbind(\'keypress\');\n    	},\n    	\n    	// Save the supplied user record both into this controller and into the Local Store\n    	saveUserToLocalStore : function(user)\n    	{\n    		this.set(\'user\',user);\n    		\n    		var UtilitiesController = this.get(\'controllers.utilities\');						\n    		UtilitiesController.storeDataInSessionStore(\'user\',user);\n    	},\n\n    	actions : \n    	{\n    		logout : function()\n    		{\n    			this.logout();\n    		},\n    		\n    		closeLoginModal : function()\n    		{\n    			if (this.loginDialogOpen)\n    			{\n    				this.loginDialogRef.close();\n    			}\n    			\n    			this.set(\"loginDialogOpen\",false);\n    		},\n\n    		closeLogoutAlertModal: function()\n    		{\n    			if (this.logoutDialogOpen)\n    			{\n    				Bootstrap.ModalManager.close(\'logoutModal\');\n    			}\n    			\n    			this.set(\"logoutDialogOpen\",false);\n    		},\n\n    		closeRegistrationModal: function()\n    		{\n    			Bootstrap.ModalManager.close(\'registrationModal\');\n    			\n    			this.set(\"loginDialogOpen\",false);\n     		},\n\n    		\n    		// For now registration consists only of opening the users mail client with some pre-filled in information.\n    		registerUser: function()\n    		{\n    			var regBody = \"Name : \" + this.regname + \"%0A%0A\";\n    			regBody += \"Phone : \" + this.regphone + \"%0A%0A\";\n    			regBody += \"IHTSDO Login : \" + this.reguser + \"%0A%0A\";\n    			regBody += \"Nationality : \" + this.regnationality + \"%0A%0A\";\n    			regBody += this.regnotes;\n    			\n    			window.location.href = \'mailto:\' + RefsetENV.APP.RegistrationEmail + \'?subject=Request for access to Snomed CT&body=\' + regBody;\n    			this.send(\'closeRegistrationModal\');\n    		},	\n    		\n    		// If user elects to use the app as a guest then we need to record that fact in order so we can choose not to show the login form if they open another window.\n    		continueAsGuest : function()\n    		{\n    			var user = this.user;\n    			user.loginDeclined = true;\n\n    			this.saveUserToLocalStore(user);\n    			\n    			Bootstrap.ModalManager.close(\'loginModal\');\n    		},\n    		\n    		// This function is called every time the user makes any interaction with the browser - mouse move, or keypress\n    		// We reset the time the user will be auto logged out because of inactivity.\n    		resetAutoLogoutTimer : function()\n    		{\n    			this.send(\"closeLogoutAlertModal\");\n\n    			var user = this.user;\n    			\n    			user.autoLogoutTime	= new Date(new Date().getTime() + this.loginExpiryLength);\n    						\n    			this.saveUserToLocalStore(user);\n    		},\n\n    	}\n    	\n    });\n  });//# sourceURL=refset/controllers/login.js");

;eval("define(\"refset/models/user\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var User = Ember.Object.extend({\n    	  name:    		     null,\n    	  firstName:        \'Guest\',\n    	  lastName:         null,\n    	  token:			null,\n    	  permissionGroups: null,\n    	  logoutTimer:		0,\n    	  autoLogoutTime:	new Date(),\n    	  loginDeclined:	false\n    });\n\n    __exports__[\"default\"] = User;\n  });//# sourceURL=refset/models/user.js");

;eval("define(\"refset/controllers/news\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	\n    	model : \n    	[\n    		{\n    	    	\"id\": \"news\",\n    	    	\"title\": \"News...\",\n    	    	\"published\": \"2014-09-02T10:00:00\",\n    	    	\"description\": \"We will use this news section to post information about updates to the app. There is no back-end for this for now. Possibly in the future. For now, it\'s coded into the app, which is fine since we\'ll need to re-deploy when we make changes anyway. This is just to let users know about new features etc. in each release.\"\n    	    },\n    		{\n    	    	\"id\": \"authentication\",\n    	    	\"title\": \"User Authentication\",\n    	    	\"published\": \"2014-09-02T09:00:00\",\n    	    	\"description\": \"The app now integrated with the user authentication server. You may log in/log out. App checks that you have permission to use it. There is also a form to guide you through registering to use the app.\"\n    	    },\n        ],\n        \n        latestNews : [],\n        \n        init : function()\n        {\n        	this.getLatestNews();\n        },\n        \n    	getLatestNews : function()\n    	{\n    		var allNews = Ember.copy(this.model);\n    		this.latestNews.setObjects(allNews.splice(0,1));\n    	},\n\n    });\n  });//# sourceURL=refset/controllers/news.js");

;eval("define(\"refset/controllers/refsets\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	needs 			: [\"data\"],\n\n    	published 		: Ember.computed.alias(\"controllers.data.publishedRefsets\"),\n    	unpublished 	: Ember.computed.alias(\"controllers.data.unpublishedRefsets\"),\n    	\n    	init : function()\n    	{\n    	},\n    		\n    	getRefset : function(user,id)\n    	{\n    		var dataController = this.get(\'controllers.data\');\n    		dataController.getRefset(user,id);\n    	},\n\n    	actions :\n    	{\n    		refresh : function()\n    		{\n    			Ember.Logger.log(\"controllers.refsets:actions:refresh\");\n    			this.getAllRefsets(1);\n    		},\n    	}\n    });\n  });//# sourceURL=refset/controllers/refsets.js");

;eval("define(\"refset/controllers/refsets/new\", \n  [\"refset/models/refset\",\"refset/adapters/refsets\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var RefsetModel = __dependency1__[\"default\"];\n    var RefsetsAdapter = __dependency2__[\"default\"];\n\n    var refsetsAdapter = RefsetsAdapter.create();\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    		\n    	needs : [\"login\",\"utilities\",\"refsets\",\"refsets/upload\"],\n\n    	model 	: RefsetModel.create(),\n    	\n    	doImportPublishedRefset 	: false,\n    	doImportMembers 			: false,\n    	getConceptDataInProgress 	: Ember.computed.alias(\"controllers.refsets/upload.getConceptDataInProgress\"),\n    	importError 				: Ember.computed.alias(\"controllers.refsets/upload.importError\"),\n    	\n    	create : function()\n    	{\n    		// Need to serialise the form into the model\n\n    		var URLSerialisedData 	= $(\'#newRefsetForm\').serialize();\n\n    		var MemberData = [];\n    		$(\"#importedMemberForm input[type=checkbox]:checked\").each(function ()\n    		{\n    			MemberData.push(parseInt($(this).val()));\n    		});\n\n    		var utilitiesController = this.get(\'controllers.utilities\');		\n    		var refsetData = utilitiesController.deserialiseURLString(URLSerialisedData);\n    		\n    		refsetData.active = (typeof refsetData.active !== \"undefined\" && refsetData.active === \"1\") ? true : false;\n\n    		delete refsetData[\"import\"];\n    		delete refsetData[\"import-members\"];\n    		\n    		this.set(\"model\",refsetData);	\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		var _this = this;\n\n    		refsetsAdapter.create(user,this.model).then(function(refset)\n    		{\n    			if (refset.meta.status === \"CREATED\")\n    			{\n    				Ember.Logger.log(\"Refset created:\",refset.content.id);\n    				\n    				var refsetId = refset.content.id;\n    				\n    				MemberData.map(function(member)\n    				{\n    					Ember.Logger.log(\"Adding member\",member);\n    					refsetsAdapter.addMember(user,refsetId,member);\n    				});\n    				\n    				_this.set(\"model\",RefsetModel.create());\n    				var uploadAdapter = _this.get(\'controllers.refsets/upload\');		\n    				uploadAdapter.clearMembers();\n    				\n    				_this.transitionToRoute(\'refsets.refset\',refsetId);\n    			}\n    			else\n    			{\n    				Ember.Logger.log(\"Refset create failed:\",refset.meta.message);				\n    			}	\n    		});\n    	},\n\n        actions :\n        {\n        	togglePublishedRefsetImportForm : function()\n        	{\n        		Ember.Logger.log(\"togglePublishedRefsetImportForm\",this.doImportPublishedRefset);\n        		this.set(\"doImportPublishedRefset\",$(\'#import\').is(\':checked\'));\n        	},\n\n    		toggleMembersImportForm : function()\n    		{\n    			Ember.Logger.log(\"togglePublishedRefsetImportForm\",this.doImportPublishedRefset);\n    			this.set(\"doImportMembers\",$(\'#import-members\').is(\':checked\'));\n    			\n    			if (this.doImportMembers)\n    			{\n    				Ember.run.next(this,function()\n    				{\n    					Ember.Logger.log(\"controllers.refsets.new:actions:toggleMembersImportForm (Setting event listeners)\");\n    					\n    					document.getElementById(\'refsetUploadFileInput\').addEventListener(\'change\', readSingleFile, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragover\', handleDragOver, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'drop\', readSingleFile, false);\n    				});\n    			}\n    			else\n    			{\n    				Ember.Logger.log(\"controllers.refsets.new:actions:toggleMembersImportForm (Clearing members)\");\n\n    				var uploadController = this.get(\'controllers.refsets/upload\');\n    				uploadController.clearMemberList();\n    			}\n    		},\n\n        }\n    });\n  });//# sourceURL=refset/controllers/refsets/new.js");

;eval("define(\"refset/models/refset\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Object.extend({\n    	id:	null,\n    	moduleId: null,\n    	description: null,\n    	createdBy : null,\n    	created : null,\n    	languageCode : null,\n    	type : null,\n    	members : [],\n    	publishedDate : null,\n    	effectiveTime : null,\n    	active : true,\n    	published : null\n    });\n  });//# sourceURL=refset/models/refset.js");

;eval("define(\"refset/controllers/refsets/refset\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    		\n    	needs : [\"login\",\"data\"],\n    	\n    	model : Ember.computed.alias(\"controllers.data.refset\"),\n\n    });\n  });//# sourceURL=refset/controllers/refsets/refset.js");

;eval("define(\"refset/controllers/refsets/upload\", \n  [\"refset/adapters/simple-members\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var MembersAdapter = __dependency1__[\"default\"];\n\n    var membersAdapter = MembersAdapter.create();\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	\n    	needs : [\"login\"],\n    	\n    	model : [],\n        \n        importError : null,\n\n    	clearMemberList : function()\n    	{\n    		this.model.setObjects([]);\n    	},\n    	\n    	getConceptDataInProgress : false,\n\n    	\n    	clearMembers : function()\n    	{\n    		this.model.setObjects([]);\n    	},\n    	\n        actions :\n        {\n    		uploadMemberList : function(members)\n    		{\n    			var _this = this;\n    			var membersArray = members.split(\'\\n\');\n    			\n    			var idArray = membersArray.map(function(refCompId)\n    			{\n    				if (refCompId !== \"\")\n    				{\n    					return refCompId;\n    				}\n    			});\n    			\n    			idArray = $.grep(idArray,function(n){ return(n); });\n\n    			var loginController = this.get(\'controllers.login\');\n    			var user = loginController.user;\n    			\n    			this.set(\"getConceptDataInProgress\",true);\n    			\n    			var membersData = membersAdapter.findList(user,idArray).then(function(result)\n    			{\n    				var membersData2;\n    				\n    				if (result.status)\n    				{\n    					var conceptData = result.data;\n    					\n    					membersData2 = idArray.map(function(refCompId)\n    					{\n    						Ember.Logger.log(\"refCompId\",refCompId,conceptData);\n    						\n    						if (conceptData[refCompId] !== null)\n    						{\n    							return {referenceComponentId:refCompId,description: conceptData[refCompId].label, active:conceptData[refCompId].active, found:true, disabled:!conceptData[refCompId].active};\n    						}\n    						else\n    						{\n    							return {referenceComponentId:refCompId,description: \'concept not found\', active:false, found:false, disabled:true};\n    						}\n    					});	\n\n    					_this.set(\"importError\",null);\n    					_this.model.setObjects(membersData2);\n    				}\n    				else\n    				{\n    					Ember.Logger.log(result.error);\n    					_this.set(\"importError\",result.error);\n    				}\n\n    				_this.set(\"getConceptDataInProgress\",false);\n    				return membersData2;\n    			});\n    			\n    			Ember.Logger.log(\"controllers.refsets.upload:actions:uploadMemberList (membersData)\",membersData);			\n    		},\n\n        }\n    });\n  });//# sourceURL=refset/controllers/refsets/upload.js");

;eval("define(\"refset/controllers/utilities\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	deserialiseURLString: function(p)\n    	{\n    		var ret = {};\n    		\n    		if (p !== null)\n    		{\n    			var seg = p.replace(/^\\?/,\'\').split(\'&\');\n    		    var len = seg.length, i = 0;\n    			for (;i<len;i++) \n    			{\n    				if (!seg[i]) { continue; }\n    				var s = seg[i].split(\'=\');\n    				var v = this.urldecode(s[1]);\n    				ret[s[0]] = /^\\[^0]d+$/.test(v) ? Math.ceil(v) : v == \"null\" ? null : v; // If our value is an integer value then force it to be numeric rather than a string\n    			}\n    		}\n    		return ret;\n    	},\n    	\n    	urldecode : function(str) \n    	{\n    		return decodeURIComponent((str+\'\').replace(/\\+/g, \'%20\'));\n    	},\n    	\n    	serialiseObject : function(object)\n    	{\n    		var URLSerialisedData = \"\";\n    		\n    		for (var key in object)\n    		{\n    			if (object.hasOwnProperty(key) && key !== \"toString\")\n    			{\n    				if (URLSerialisedData !== \"\") \n    			    {\n    			    	URLSerialisedData += \"&\";\n    			    }\n    			    \n    			    URLSerialisedData += key + \"=\" + object[key];\n    			}\n    		}\n    		\n    		return URLSerialisedData;\n    	},\n    	\n    	storeDataInSessionStore : function(key,data)\n    	{\n    		var URLSerialisedData = JSON.stringify(data);\n    		sessionStoreManager.setSessionVar(key,URLSerialisedData);		\n    	},\n    	\n    	getDataFromSessionStore : function(key)\n    	{\n    		var returnObj = {};\n    		\n    		var storedData = sessionStoreManager.getSessionVar(key);\n\n    		if (typeof storedData !== \"undefined\")\n    		{\n    			try\n    			{\n    				returnObj.data 		= JSON.parse(storedData);\n    				returnObj.status 	= \'ok\';\n    			}\n    			catch(e)\n    			{\n    				returnObj.status 	= \'error\';				\n    			}\n    		}\n    		else\n    		{\n    			returnObj.status = \'error\';\n    		}\n    			\n    		return returnObj;\n    	},\n    });\n  });//# sourceURL=refset/controllers/utilities.js");

;eval("define(\"refset/helpers/date-format\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(date)\n    {\n    	return $.formatDateTime(\'MM dd, yy\', new Date(date));\n    });\n  });//# sourceURL=refset/helpers/date-format.js");

;eval("define(\"refset/helpers/id-to-name\", \n  [\"refset/adapters/simple-members\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var MembersAdapter = __dependency1__[\"default\"];\n    var membersAdapter = MembersAdapter.create();\n\n    var concepts = {\n    		\n    		\'446609009\' : \'Simple type reference set\',\n    		\'900000000000496009\' : \'Simple map type reference set\',\n    		\'900000000000461009\' : \'Concept type components\',\n    		\'900000000000464001\' : \'Reference set member type component\'\n    };\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(id)\n    {\n    	if (typeof concepts[id] === \"undefined\")\n    	{\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		var foundMembers = membersAdapter.find(user,id);\n    		var memberObj;\n    		\n    		var result = Ember.RSVP.Promise.all([foundMembers]).then(function(resultObj)\n    		{\n    			Ember.Logger.log(\"resultObj\",resultObj);\n    			\n    			if (resultObj.status === \"OK\")\n    			{\n    				memberObj = resultObj.data;\n    				Ember.Logger.log(\"memberObj\",memberObj);\n    				concepts[id] = memberObj.label.replace(/ *\\([^)]*\\) */g, \"\");\n    			}\n    			else\n    			{\n    				return \'unknown\';\n    			}\n    		});\n    		\n    		return result;\n    	}\n    	else\n    	{\n    		return concepts[id];\n    	}\n    });\n  });//# sourceURL=refset/helpers/id-to-name.js");

;eval("define(\"refset/helpers/yes-no-format\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(value)\n    {\n    	return value ? \'Yes\' : \'No\';\n    });\n  });//# sourceURL=refset/helpers/yes-no-format.js");

;eval("define(\"refset/models/refset-editable-fields\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Object.extend({\n    	id:	false,\n    	moduleId: false,\n    	description: true,\n    	createdBy : false,\n    	created : false,\n    	languageCode : false,\n    	type : false,\n    	members : true,\n    	publishedDate : false,\n    	effectiveTime : false,\n    	active : true,\n    	published : false\n    });\n  });//# sourceURL=refset/models/refset-editable-fields.js");

;eval("define(\"refset/models/simple-refset-member\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Object.extend({\n    	id:	null,\n    	moduleId: null,\n    	referenceComponentId: null,\n    	description: null,\n    	effectiveTime : null,\n    	active : true\n    });\n  });//# sourceURL=refset/models/simple-refset-member.js");

;eval("define(\"refset/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: RefsetENV.locationType\n    });\n\n    Router.map(function() {\n    	  this.route(\"dashboard\",{path:\'/\'});\n    	  \n    	  this.resource(\"refsets\", function(){\n    		  this.route(\"refset\", {path:\':id\'});\n    		  this.route(\"new\");\n    	  });\n\n    	  this.route(\"news\");\n    	  this.route(\"privacy-statement\");\n    	  this.route(\"cookie-policy\");\n    	  this.route(\"accessibility\");\n    	  this.route(\"terms-and-conditions\");\n    	  this.route(\"site-map\");\n    	  \n    	  //this.route(\'catchall\', {path: \'/*wildcard\'});\n    });\n\n    Ember.Route.reopen({\n    	  getParentRoute: function(){\n    	    var route = this;\n    	    var handlerInfos = route.router.router.currentHandlerInfos;\n    	    var parent, current;\n\n    	    for (var i=0, l=handlerInfos.length; i<l; i++) {\n    	      current = handlerInfos[i].handler;\n    	      if((current.routeName === route.routeName)||(current.routeName.match(/./) && current.routeName.split(\'.\')[1] === route.routeName )){\n    	        return parent.routeName;\n    	      }\n    	      parent = current;\n    	    }\n    	  }\n    	});\n    	\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=refset/router.js");

;eval("define(\"refset/routes/accessibility\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/accessibility.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/accessibility.js");

;eval("define(\"refset/routes/cookie-policy\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/cookie-policy.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/cookie-policy.js");

;eval("define(\"refset/routes/news\", \n  [\"refset/controllers/news\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var NewsController = __dependency1__[\"default\"];\n\n    var newsController = NewsController.create();\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	   model: function() \n    	   {\n    		   return  newsController.model;\n    	   }\n     });\n  });//# sourceURL=refset/routes/news.js");

;eval("define(\"refset/routes/privacy-statement\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/privacy-statement.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/privacy-statement.js");

;eval("define(\"refset/routes/refsets\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n\n    });\n  });//# sourceURL=refset/routes/refsets.js");

;eval("define(\"refset/routes/refsets/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n    	controllerName : \'refsets\',\n    });\n  });//# sourceURL=refset/routes/refsets/index.js");

;eval("define(\"refset/routes/refsets/new\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function() \n    	{\n    		var newRefsetController 	= this.controllerFor(\'refsets.new\');\n    		var uploadRefsetController 	= this.controllerFor(\'refsets.upload\');\n\n    		return Ember.RSVP.hash({\n    			refset 					: newRefsetController.model,\n    			members 				: uploadRefsetController.model,\n    			doImportPublishedRefset	: newRefsetController.doImportPublishedRefset,\n    			doImportMembers 		: newRefsetController.doImportMembers,			\n    		});\n    	},\n\n    	actions :\n    	{\n    		initRefsetImport : function()\n    		{\n    			var newRefsetController = this.controllerFor(\'refsets.new\');\n    			newRefsetController.create(this.refset);\n    		},\n    	},	\n     });\n  });//# sourceURL=refset/routes/refsets/new.js");

;eval("define(\"refset/routes/refsets/refset\", \n  [\"refset/adapters/refsets\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var RefsetsAdapter = __dependency1__[\"default\"];\n    var refsetsAdapter = RefsetsAdapter.create();\n\n    __exports__[\"default\"] = Ember.Route.extend({\n            		\n    	beforeModel : function(params)\n    	{\n    		var _this 	= this;\n    		var id 		= params.params[\"refsets.refset\"].id;\n    		\n    		Ember.Logger.log(\"routes.refsets.refset:beforeModel (id)\",id);\n    		\n    		// Run next so that we do not prevent the UI being dislayed if the data is delayed...\n    		return Ember.run.next(function(){_this.controllerFor(\'data\').getRefset(id);});\n    	},\n\n    	actions : \n    	{\n    		goBack : function()\n    		{\n    			this.transitionTo(\'refsets\');\n    		},\n    		\n    		showLoginForm: function() \n    		{\n    			Ember.Logger.log(\'routes.resfets.refset:actions:showLoginForm\');\n    			this.controllerFor(\'application\').send(\'showLoginForm\');\n    		},\n\n    		updateRefset : function()\n    		{\n    			Ember.Logger.log(\"routes.refsets.refset:actions:updateRefset\");\n\n    			var Refset = this.get(\"refset\");\n\n    			delete Refset[\"formattedCreatedDate\"];\n    			delete Refset[\"formattedPublishedDate\"];\n    			delete Refset[\"numMembers\"];\n    			\n    			var MembersToDelete = [];\n    			$(\".checkboxList input[name=deleteConcept]:checked\").each(function ()\n    			{\n    				MembersToDelete.push(parseInt($(this).val()));\n    			});			\n    			\n    			for (var m=Refset.members.length-1;m>=0;m--)\n    			{\n    				if ($.inArray(Refset.members[m].referenceComponentId,MembersToDelete))\n    				{\n    					Refset.members.splice(m,1);\n    				}\n    			}\n    			Ember.Logger.log(\"finished checking\",Refset.members.length);\n    			\n    			var ActiveMembers = [];\n    			$(\".checkboxList input[name=conceptId]:checked\").each(function ()\n    			{\n    				ActiveMembers.push(parseInt($(this).val()));\n    			});			\n    			Ember.Logger.log(\"ActiveMembers\",ActiveMembers);\n\n    			for (m=0;m<Refset.members.length;m++)\n    			{\n    				delete Refset.members[m][\"conceptactive\"];\n    				delete Refset.members[m][\"found\"];\n    				delete Refset.members[m][\"description\"];\n\n    				Refset.members[m].active = (ActiveMembers.indexOf(Refset.members[m].referenceComponentId) !== -1);\n    			}\n    			\n    			var URLSerialisedData 	= $(\'#refsetEditForm\').serialize();\n    			Ember.Logger.log(\"$(\'#refsetEditForm\')\",$(\'#refsetEditForm\'));\n\n    			var utilitiesController = this.controllerFor(\'utilities\');\n    			var updatedData = utilitiesController.deserialiseURLString(URLSerialisedData);\n    			\n    			for (var key in updatedData)\n    			{\n    				Refset[key] = updatedData[key];\n    			}\n    						\n    			var loginController = this.controllerFor(\'login\');\n    			var user = loginController.get(\"user\");\n    			\n    			refsetsAdapter.update(user,Refset).then(function(refset)\n    			{\n    				if (refset.meta.status === \"OK\")\n    				{\n    					Ember.Logger.log(\"Refset updated:\",refset.content.id);\n    				}\n    				else\n    				{\n    					Ember.Logger.log(\"Refset update failed:\",refset.meta.message);				\n    				}	\n    			});\n    		},	\n\n    		exportRefset : function(id)\n    		{\n    			Ember.Logger.log(\"routes.refsets.refset:actions:exportRefset (id)\",id);\n    			\n    			var loginController = this.controllerFor(\'login\');\n    			var user = loginController.user;\n    			\n    			refsetsAdapter.getRefsetExport(user, id).then(function(exportFile)\n    			{\n    				var blob = new Blob([exportFile], {type: \"text/plain;charset=utf-8\"});\n    				saveAs(blob, id + \".rf2\");\n    			});\n    			\n    		},	\n    		\n    		deleteRefset : function(id)\n    		{\n    			Ember.Logger.log(\"routes.refsets.refset:actions:deleteRefset (id)\",id);\n    			\n    			var loginController = this.controllerFor(\'login\');\n    			var user = loginController.user;\n    			\n    			var _this = this;\n    			\n    			refsetsAdapter.deleteRefset(user, id).then(function()\n    			{\n    				var refsetController = _this.controllerFor(\'refsets\');\n    				refsetController.getAllRefsets(1);\n    				\n    				_this.transitionTo(\'refsets\');\n    			});\n    			\n    		},	\n    	}\n    });\n  });//# sourceURL=refset/routes/refsets/refset.js");

;eval("define(\"refset/routes/site-map\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n         return \'site map goes here...\';\n       }\n     });\n  });//# sourceURL=refset/routes/site-map.js");

;eval("define(\"refset/routes/terms-and-conditions\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/terms-and-conditions.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/terms-and-conditions.js");

;eval("define(\"refset/templates/accessibility\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/accessibility.js");

;eval("define(\"refset/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"IHTSDO logo\");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				<a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"logout\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Logout</a>\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"showLogoutTimer\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n			\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-progress\'] || (depth0 && depth0[\'bs-progress\']),options={hash:{\n        \'progressBinding\': (\"logoutProgressDisplay\"),\n        \'type\': (\"danger\"),\n        \'stripped\': (\"true\")\n      },hashTypes:{\'progressBinding\': \"STRING\",\'type\': \"STRING\",\'stripped\': \"STRING\"},hashContexts:{\'progressBinding\': depth0,\'type\': depth0,\'stripped\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-progress\", options))));\n      data.buffer.push(\" <p class=\\\"warningText\\\">Logging you out in \");\n      stack1 = helpers._triageMustache.call(depth0, \"logoutTimerDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" seconds\");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n				<a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showLoginForm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Login</a> &bull;\\n				<a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showRegistrationForm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Register</a>\\n			\");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"Dashboard\");\n      }\n\n    function program10(depth0,data) {\n      \n      \n      data.buffer.push(\"Refset\");\n      }\n\n    function program12(depth0,data) {\n      \n      \n      data.buffer.push(\"News\");\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"user.firstName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"user.lastName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      }\n\n    function program16(depth0,data) {\n      \n      \n      data.buffer.push(\"Guest\");\n      }\n\n    function program18(depth0,data) {\n      \n      \n      data.buffer.push(\"Privacy\");\n      }\n\n    function program20(depth0,data) {\n      \n      \n      data.buffer.push(\"Cookie policy\");\n      }\n\n    function program22(depth0,data) {\n      \n      \n      data.buffer.push(\"Accessibility\");\n      }\n\n    function program24(depth0,data) {\n      \n      \n      data.buffer.push(\"Terms and conditions\");\n      }\n\n    function program26(depth0,data) {\n      \n      \n      data.buffer.push(\"Site map\");\n      }\n\n      data.buffer.push(\"<div class=\\\"wrapper\\\">\\n\\n	<header>\\n		\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"logo\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"dashboard\", options) : helperMissing.call(depth0, \"link-to\", \"dashboard\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		<nav class=\\\"loginRegisterButtons\\\">\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"user.token\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</nav>\\n\\n        <nav>\\n            <ul>\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"dashboard\", options) : helperMissing.call(depth0, \"link-to\", \"dashboard\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"refsets\", options) : helperMissing.call(depth0, \"link-to\", \"refsets\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n                <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"news\", options) : helperMissing.call(depth0, \"link-to\", \"news\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n                <li><span class=\\\"clrPrimary\\\">Welcome</span> \");\n      stack1 = helpers[\'if\'].call(depth0, \"user.token\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n            </ul>\\n        </nav>\\n\\n\\n    </header>\\n\\n	<section class=\\\"content contain pageLayout\\\">\\n\\n		\");\n      stack1 = helpers._triageMustache.call(depth0, \"bs-growl-notifications\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n<!---		\");\n      stack1 = helpers._triageMustache.call(depth0, \"bs-breadcrumbs\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"   --->\\n		\\n		\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \\n\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modal\", options) : helperMissing.call(depth0, \"outlet\", \"modal\", options))));\n      data.buffer.push(\"\\n\\n	</section>\\n\\n	<footer class=\\\"pageLayout contain\\\">\\n		\\n		<hr>\\n\\n		<div class=\\\"share\\\">\\n			<span><small>Share</small></span>\\n			<ul>\\n				<li><a href=\\\"#\\\" class=\\\"linkedin\\\">linkedin</a></li>\\n				<li><a href=\\\"#\\\" class=\\\"twitter\\\">twitter</a></li>\\n				<li><a href=\\\"#\\\" class=\\\"google\\\">googleplus</a></li>\\n			</ul>\\n		</div>\\n\\n		<nav>\\n            <ul>\\n                <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"privacy-statement\", options) : helperMissing.call(depth0, \"link-to\", \"privacy-statement\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n                <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"cookie-policy\", options) : helperMissing.call(depth0, \"link-to\", \"cookie-policy\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n                <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"accessibility\", options) : helperMissing.call(depth0, \"link-to\", \"accessibility\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n                <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"terms-and-conditions\", options) : helperMissing.call(depth0, \"link-to\", \"terms-and-conditions\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n                <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"site-map\", options) : helperMissing.call(depth0, \"link-to\", \"site-map\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n                <li><small><a href=\\\"http://www.ihtsdo.org/\\\" target=\\\"_blank\\\">&copy; Copyright IHTSDO 2014</a></small></li>\\n            </ul>\\n        </nav>\\n\\n	</footer>\\n	\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/application.js");

;eval("define(\"refset/templates/components/latest-news\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n	<ul class=\\\"list-group\\\">\\n		\");\n      stack1 = helpers.each.call(depth0, \"news\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</ul>\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			<li class=\\\"list-group-item\\\">\\n				<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n				<em>published:</em> \");\n      stack1 = helpers._triageMustache.call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			</li>\\n		\");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Latest News\"),\n        \'type\': (\"success\"),\n        \'class\': (\"panelNoPadding\")\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=refset/templates/components/latest-news.js");

;eval("define(\"refset/templates/components/member-list\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		<li class=\\\"list-group-item\\\">\\n			<label \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":control-label found::disabled\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n				<input type=\\\"checkbox\\\" name=\\\"conceptId\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"referenceComponentId\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'checked\': (\"active\")\n      },hashTypes:{\'checked\': \"STRING\"},hashContexts:{\'checked\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"disabled\")\n      },hashTypes:{\'disabled\': \"STRING\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"> \\n				\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"found\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				<span class=\\\"referenceComponentId\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referenceComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n			</label>\\n		</li>\\n	\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers.unless.call(depth0, \"active\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"<br><span class=\\\"warning\\\">This concept is INACTIVE and so cannot be added to this Refset at this time</span>\");\n      }\n\n      data.buffer.push(\"<form id=\\\"importedMemberForm\\\">\\n<ul class=\\\"list-group checkboxList\\\">\\n	\");\n      stack1 = helpers.each.call(depth0, \"members\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n</form>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/components/member-list.js");

;eval("define(\"refset/templates/components/refsets-list\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n	<ul class=\\\"list-group\\\">\\n		\");\n      stack1 = helpers.each.call(depth0, \"refsets\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</ul>\\n\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n			<li class=\\\"list-group-item\\\">\\n				\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"refsets.refset\", \"id\", options) : helperMissing.call(depth0, \"link-to\", \"refsets.refset\", \"id\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n				<em>created on:</em> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"created\", options) : helperMissing.call(depth0, \"date-format\", \"created\", options))));\n      data.buffer.push(\"<br>\\n				<em>by:</em> \");\n      stack1 = helpers._triageMustache.call(depth0, \"createdBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"<br>\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			</li>\\n		\");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"<button class=\\\"btn btn-primary right\\\">view</button>\");\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n					<em>published on:</em> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"publishedDate\", options) : helperMissing.call(depth0, \"date-format\", \"publishedDate\", options))));\n      data.buffer.push(\"<br>\\n				\");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"title\"),\n        \'type\': (\"info\"),\n        \'class\': (\"panelNoPadding\")\n      },hashTypes:{\'heading\': \"ID\",\'type\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=refset/templates/components/refsets-list.js");

;eval("define(\"refset/templates/cookie-policy\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/cookie-policy.js");

;eval("define(\"refset/templates/dashboard\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"dashboard\\\">\\n	<div class=\\\"colMed inner\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refsets-list\'] || (depth0 && depth0[\'refsets-list\']),options={hash:{\n        \'refsets\': (\"refsets\"),\n        \'title\': (\"Latest Public Refsets\")\n      },hashTypes:{\'refsets\': \"ID\",\'title\': \"STRING\"},hashContexts:{\'refsets\': depth0,\'title\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"refsets-list\", options))));\n      data.buffer.push(\"\\n	</div>\\n	\\n	<div class=\\\"colMed inner\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'latest-news\'] || (depth0 && depth0[\'latest-news\']),options={hash:{\n        \'news\': (\"news\")\n      },hashTypes:{\'news\': \"ID\"},hashContexts:{\'news\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"latest-news\", options))));\n      data.buffer.push(\"\\n	</div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/dashboard.js");

;eval("define(\"refset/templates/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		<p class=\\\"autoLogoutInfo\\\">You have been automatically logged out after \");\n      stack1 = helpers._triageMustache.call(depth0, \"RefsetENV.APP.loginExpiry\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" minutes of inactivity.</p>\\n	\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n		<div class=\\\"loading\\\">Logging you in, please wait...</div>\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-progress\'] || (depth0 && depth0[\'bs-progress\']),options={hash:{\n        \'progress\': (100),\n        \'stripped\': (true),\n        \'animated\': (true)\n      },hashTypes:{\'progress\': \"INTEGER\",\'stripped\': \"BOOLEAN\",\'animated\': \"BOOLEAN\"},hashContexts:{\'progress\': depth0,\'stripped\': depth0,\'animated\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-progress\", options))));\n      data.buffer.push(\"\\n	\");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		<div class=\\\"error\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"loginError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n	\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<form id=\\\"loginForm\\\" class=\\\"RefsetPanel\\\" action=\\\"javascript:Refset.__container__.lookup(\'controller:login\').send(\'loginUser\')\\\">\\n	\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"autoLoggedOut\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n	<p>\\n		For access to the full range to tools you will need to login.\\n		You may continue as a guest to view only public refsets.\\n	</p>\\n	\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"username\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Username\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"password\"),\n        \'type\': (\"password\"),\n        \'id\': (\"loginPassword\"),\n        \'placeholder\': (\"Password\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'id\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'id\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"loginInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"loginError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n	<button type=\\\"submit\\\" style=\\\"display:none\\\">Submit</button>\\n	\\n	<p class=\\\"forgetPasswordLink\\\"><a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"RefsetENV.APP.passwordResetURL\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" target=\\\"_blank\\\">I\'ve forgotten my password</a></p>\\n</form>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/login.js");

;eval("define(\"refset/templates/logout-alert\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div id=\\\"logoutWarningModel\\\">\\n	<p class=\\\"heading\\\">Due to inactivity, you will be automatically logged out in</p>\\n\\n	<p class=\\\"timer\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"logoutTimerDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" seconds</p>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/logout-alert.js");

;eval("define(\"refset/templates/news\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"dashboard\\\">\\n	<div class=\\\"colMed inner\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'latest-news\'] || (depth0 && depth0[\'latest-news\']),options={hash:{\n        \'news\': (\"model\")\n      },hashTypes:{\'news\': \"ID\"},hashContexts:{\'news\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"latest-news\", options))));\n      data.buffer.push(\"\\n	</div>\\n	<div class=\\\"colMed inner\\\">\\n		Selected news article will show here...\\n	</div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/news.js");

;eval("define(\"refset/templates/privacy-statement\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/privacy-statement.js");

;eval("define(\"refset/templates/refsets\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Browse Refsets\");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"New Refset\");\n      }\n\n      data.buffer.push(\"<div id=\\\"toolsMenu\\\">\\n 	<ul>\\n	 	 <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"refsets\", options) : helperMissing.call(depth0, \"link-to\", \"refsets\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n		 <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"refsets.new\", options) : helperMissing.call(depth0, \"link-to\", \"refsets.new\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n	 </ul>\\n</div>\\n \\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/refsets.js");

;eval("define(\"refset/templates/refsets/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\\\"dashboard\\\">\\n	<div class=\\\"colMed inner\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refsets-list\'] || (depth0 && depth0[\'refsets-list\']),options={hash:{\n        \'refsets\': (\"published\"),\n        \'title\': (\"Published Refsets\")\n      },hashTypes:{\'refsets\': \"ID\",\'title\': \"STRING\"},hashContexts:{\'refsets\': depth0,\'title\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"refsets-list\", options))));\n      data.buffer.push(\"\\n	</div>\\n\\n	<div class=\\\"colMed inner\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refsets-list\'] || (depth0 && depth0[\'refsets-list\']),options={hash:{\n        \'refsets\': (\"unpublished\"),\n        \'title\': (\"Unpublished Refsets\")\n      },hashTypes:{\'refsets\': \"ID\",\'title\': \"STRING\"},hashContexts:{\'refsets\': depth0,\'title\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"refsets-list\", options))));\n      data.buffer.push(\"\\n	</div>\\n</div>\\n<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"refresh\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-default\\\">Refresh</button>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/refsets/index.js");

;eval("define(\"refset/templates/refsets/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers[\'with\'].call(depth0, \"refset\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"doImportPublishedRefset\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n			</form>\\n\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"doImportMembers\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n			<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"initRefsetImport\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-primary right\\\">Create Refset</button>\\n\\n		\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n			<form class=\\\"myForm\\\" id=\\\"newRefsetForm\\\" name=\\\"newRefsetForm\\\">\\n\\n				<label class=\\\"control-label\\\" for=\\\"description\\\">Refset Description</label>\\n				<textarea id=\\\"description\\\" name=\\\"description\\\">\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</textarea>\\n\\n				<label class=\\\"control-label\\\" for=\\\"languageCode\\\">Language</label>\\n				<select id=\\\"type\\\" name=\\\"languageCode\\\" class=\\\"input-xlarge\\\">\\n					<option value=\\\"en_US\\\">US English</option>\\n				</select>\\n\\n				<label class=\\\"control-label\\\" for=\\\"typeId\\\">Refset Type</label>\\n				<select id=\\\"type\\\" name=\\\"typeId\\\" class=\\\"input-xlarge\\\">\\n					<option value=\\\"446609009\\\">Simple type reference set</option>\\n<!---					\\n					<option value=\\\"900000000000512005\\\">Query specification type reference set</option>\\n					<option value=\\\"900000000000496009\\\">Simple map type reference set</option>\\n					<option value=\\\"447250001\\\">Complex map type reference set</option>\\n					<option value=\\\"609331003\\\">Extended map type reference set</option>\\n					<option value=\\\"900000000000456007\\\">Reference set descriptor reference set</option>\\n					<option value=\\\"900000000000516008\\\">Annotation type reference set</option>\\n					<option value=\\\"900000000000506000\\\">Language type reference set</option>\\n					<option value=\\\"900000000000480006\\\">Attribute value type reference set</option>\\n					<option value=\\\"900000000000538005\\\">Description format reference set</option>\\n					<option value=\\\"609430003\\\">Concept model reference set</option>\\n					<option value=\\\"900000000000534007\\\">Module dependency reference set </option>\\n--->\\n				</select>\\n\\n				<label class=\\\"control-label\\\" for=\\\"componentTypeId\\\">Refset Components Type</label>\\n				<select id=\\\"type\\\" name=\\\"componentTypeId\\\" class=\\\"input-xlarge\\\">\\n					<option value=\\\"900000000000461009\\\">Concept type components</option>\\n<!---\\n					<option value=\\\"900000000000462002\\\">Description type components</option>\\n					<option value=\\\"900000000000464001\\\">Reference set member type component</option>\\n					<option value=\\\"900000000000463007\\\">Relationship type component</option>\\n--->\\n				</select>\\n\\n			    <label class=\\\"control-label\\\" for=\\\"active\\\">\\n			    	<input name=\\\"active\\\" id=\\\"active\\\" value=\\\"1\\\" type=\\\"checkbox\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'checked\': (\"active\")\n      },hashTypes:{\'checked\': \"STRING\"},hashContexts:{\'checked\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n			    	Refset is active?\\n			    </label>\\n\\n			    <label class=\\\"control-label\\\" for=\\\"import\\\">\\n			    	<input name=\\\"import\\\" id=\\\"import\\\" value=\\\"1\\\" type=\\\"checkbox\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"togglePublishedRefsetImportForm\", {hash:{\n        \'on\': (\"change\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'checked\': (\"doImportPublishedRefset\")\n      },hashTypes:{\'checked\': \"STRING\"},hashContexts:{\'checked\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n			    	Are you importing a Published Refset?\\n			    </label>\\n\\n			    <label class=\\\"control-label\\\" for=\\\"import-members\\\">\\n			    	<input name=\\\"import\\\" id=\\\"import-members\\\" value=\\\"1\\\" type=\\\"checkbox\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleMembersImportForm\", {hash:{\n        \'on\': (\"change\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'checked\': (\"doImportMembers\")\n      },hashTypes:{\'checked\': \"STRING\"},hashContexts:{\'checked\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n			    	Do you wish to import Members?\\n			    </label>\\n				\");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					\");\n      stack1 = helpers[\'with\'].call(depth0, \"refset\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n						<label class=\\\"control-label\\\" for=\\\"id\\\">ID</label>\\n						<input id=\\\"id\\\" name=\\\"id\\\" placeholder=\\\"ID\\\" type=\\\"text\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"id\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n\\n						<label class=\\\"control-label\\\" for=\\\"moduleId\\\">Module ID</label>\\n						<input id=\\\"moduleId\\\" name=\\\"moduleId\\\" placeholder=\\\"Module ID\\\" type=\\\"text\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"moduleId\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n\\n						<label class=\\\"control-label\\\" for=\\\"created\\\">Creation Date</label>\\n						<input id=\\\"created\\\" name=\\\"created\\\" placeholder=\\\"Created Date\\\" type=\\\"text\\\"  \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"created\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" data-provide=\\\"datepicker\\\" data-date-format=\\\"MM d, yyyy\\\">\\n\\n						<label class=\\\"control-label\\\" for=\\\"createdBy\\\">Created By</label>\\n						<input id=\\\"createdBy\\\" name=\\\"createdBy\\\" placeholder=\\\"refset created by\\\" type=\\\"text\\\"  \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"createdBy\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n\\n						<label class=\\\"control-label\\\" for=\\\"publishedDate\\\">Date Published</label>\\n						<input id=\\\"publishedDate\\\" name=\\\"publishedDate\\\" placeholder=\\\"Date Published\\\" required=\\\"\\\" type=\\\"text\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"publishedDate\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" data-provide=\\\"datepicker\\\">\\n					\");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n\\n				<b>Import Members (flat file)</b>\\n				<p>To import members from a flat-file of concept IDs, either use the browse button to locate your file, or drag a file below.</p>\\n\\n				<input type=\\\"file\\\" id=\\\"refsetUploadFileInput\\\" />\\n\\n				<div id=\\\"fileUploadDropZone\\\" class=\\\"fileUploadDropZone\\\">Drop files here</div>\\n				\\n				<a href=\\\"/assets/temp/sample_refset.txt\\\" target=\\\"_blank\\\">Click here to download the latest sample refset file which you can use in the form above</a>\\n\\n			\");\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n	<div class=\\\"colMed inner\\\">\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"getConceptDataInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</div>\\n	\");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n			\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Importing member concepts\"),\n        \'type\': (\"info\")\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\");\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n				<img src=\\\"assets/img/googleballs-animated.gif\\\">\\n				<p><b>Please wait...</b></p>\\n			\");\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\");\n      return buffer;\n      }\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n				\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Importing members failed\"),\n        \'type\': (\"info\")\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0},inverse:self.noop,fn:self.program(15, program15, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					<p><b\");\n      stack1 = helpers._triageMustache.call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</b></p>\\n				\");\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"members\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program18(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n					\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Member concepts to be imported\"),\n        \'type\': (\"info\"),\n        \'class\': (\"panelNoPadding\")\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0,\'class\': depth0},inverse:self.noop,fn:self.program(19, program19, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\");\n      return buffer;\n      }\n    function program19(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n						\");\n      data.buffer.push(escapeExpression((helper = helpers[\'member-list\'] || (depth0 && depth0[\'member-list\']),options={hash:{\n        \'members\': (\"members\")\n      },hashTypes:{\'members\': \"ID\"},hashContexts:{\'members\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"member-list\", options))));\n      data.buffer.push(\"\\n					\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"dashboard\\\">\\n	<div class=\\\"colMed inner\\\">\\n		\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Create New Refset\"),\n        \'type\': (\"info\")\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		<!-- This requires vendore/my_utilities/drag_drop_file_upload.js --->\\n	</div>\\n\\n	\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"doImportMembers\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/refsets/new.js");

;eval("define(\"refset/templates/refsets/refset\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n	You need to <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showLoginForm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">login</a> to access this refset\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n	<div class=\\\"dashboard\\\">\\n			\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Refset Header\"),\n        \'type\': (\"info\"),\n        \'collapsible\': (\"true\")\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\",\'collapsible\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0,\'collapsible\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\\n			\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Members (ticks indicate ACTIVE concepts)\"),\n        \'type\': (\"info\"),\n        \'class\': (\"panelNoPadding\"),\n        \'collapsible\': (true),\n        \'open\': (false)\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\",\'class\': \"STRING\",\'collapsible\': \"BOOLEAN\",\'open\': \"BOOLEAN\"},hashContexts:{\'heading\': depth0,\'type\': depth0,\'class\': depth0,\'collapsible\': depth0,\'open\': depth0},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n			\");\n      stack1 = helpers.unless.call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"exportRefset\", \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-default\\\">Export</button>\\n			<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"updateRefset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-primary right\\\">Save changes</button>\\n		\\n	</div>\\n\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n				<form id=\\\"refsetEditForm\\\" class=\\\"myForm\\\">\\n					\\n					<table width=\\\"100%>\\n						\\n						<tr>\\n							\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						</tr>\\n\\n						<tr>\\n							<td class=\\\"content\\\" colspan=\\\"4\\\"><textarea name=\\\"description\\\" placeholder=\\\"Description\\\" rows=2 class=\\\"ember-view ember-text-area form-control\\\">\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</textarea></td>\\n						</tr>\\n	\\n						<tr>\\n							<td class=\\\"label\\\">Language</td><td class=\\\"content\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"languageCode\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td class=\\\"label\\\">Active</td><td class=\\\"content\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'yes-no-format\'] || (depth0 && depth0[\'yes-no-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"active\", options) : helperMissing.call(depth0, \"yes-no-format\", \"active\", options))));\n      data.buffer.push(\"</td>\\n						</tr>\\n	\\n						<tr>\\n							<td class=\\\"label\\\">Refset Type</td><td class=\\\"content\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'id-to-name\'] || (depth0 && depth0[\'id-to-name\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"typeId\", options) : helperMissing.call(depth0, \"id-to-name\", \"typeId\", options))));\n      data.buffer.push(\"</td>\\n							<td class=\\\"label\\\">Refset Members Type</td><td class=\\\"content\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'id-to-name\'] || (depth0 && depth0[\'id-to-name\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"componentTypeId\", options) : helperMissing.call(depth0, \"id-to-name\", \"componentTypeId\", options))));\n      data.buffer.push(\"</td>\\n						</tr>\\n	\\n						<tr>\\n							<td class=\\\"label\\\">Created on</td><td class=\\\"content\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"created\", options) : helperMissing.call(depth0, \"date-format\", \"created\", options))));\n      data.buffer.push(\"</td>\\n							<td class=\\\"label\\\">by</td><td class=\\\"content\\\">\");\n      stack1 = helpers[\'if\'].call(depth0, \"createdBy\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n						</tr>\\n	\\n						<tr>\\n							<td class=\\\"label\\\">ID</td><td class=\\\"content\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							<td class=\\\"label\\\">Module ID</td><td class=\\\"content\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"moduleId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n						</tr>\\n					\\n					</table>\\n				</form>\\n			\");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n								<td class=\\\"label\\\">Published on</td><td class=\\\"content\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"publishedDate\", options) : helperMissing.call(depth0, \"date-format\", \"publishedDate\", options))));\n      data.buffer.push(\"</td>\\n							\");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n								<td class=\\\"label\\\">Not yet published</td>\\n							\");\n      }\n\n    function program9(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"createdBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"unknown\");\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			\\n				<ul class=\\\"list-group checkboxList\\\">\\n					\");\n      stack1 = helpers.each.call(depth0, \"members\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				</ul>\\n			\\n			\");\n      return buffer;\n      }\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n						<li \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item published::unpublishedMember\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n							<label \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":control-label found::disabled\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n								<input type=\\\"checkbox\\\" name=\\\"conceptId\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"referenceComponentId\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'checked\': (\"active\")\n      },hashTypes:{\'checked\': \"STRING\"},hashContexts:{\'checked\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"disabled\")\n      },hashTypes:{\'disabled\': \"STRING\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"> \\n								\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								\");\n      stack1 = helpers[\'if\'].call(depth0, \"found\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								<span class=\\\"referenceComponentId\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referenceComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n							</label>\\n							\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(20, program20, data),fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						</li>\\n					\");\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers.unless.call(depth0, \"conceptactive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n    function program16(depth0,data) {\n      \n      \n      data.buffer.push(\"<br><span class=\\\"warning\\\">This concept is INACTIVE and so will not be included in any Refset export at this time</span>\");\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n								<span class=\\\"publishDate\\\"><em>Effective date:</em> <b>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"effectiveTime\", options) : helperMissing.call(depth0, \"date-format\", \"effectiveTime\", options))));\n      data.buffer.push(\"</b></span>\\n							\");\n      return buffer;\n      }\n\n    function program20(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n								<label class=\\\"control-label\\\">\\n									<input type=\\\"checkbox\\\" name=\\\"deleteConcept\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"referenceComponentId\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"> Delete this concept from the Refset\\n								</label>\\n							\");\n      return buffer;\n      }\n\n    function program22(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n			<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"deleteRefset\", \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-default\\\">Delete</button>\\n			\");\n      return buffer;\n      }\n\n      stack1 = helpers[\'if\'].call(depth0, \"authError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      \n    });\n  });//# sourceURL=refset/templates/refsets/refset.js");

;eval("define(\"refset/templates/registration\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div id=\\\"registrationForm\\\" class=\\\"RefsetPanel\\\">\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"regname\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Your Name\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"regphone\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Your phone number\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"reguser\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Already registered with IHTSDO? Enter your login ID here...\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"regnationality\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Otherwise, please tell us your nationality\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"regnotes\"),\n        \'placeholder\': (\"Please tell us why you would like access to Snomed CT\")\n      },hashTypes:{\'value\': \"ID\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/registration.js");

;eval("define(\"refset/templates/site-map\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" (templates/side-map.hbs)\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/site-map.js");

;eval("define(\"refset/templates/terms-and-conditions\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/terms-and-conditions.js");

;eval("define(\"refset/tests/adapters/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/login.js should pass jshint\', function() { \n      ok(true, \'adapters/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/adapters/login.jshint.js");

;eval("define(\"refset/tests/adapters/refsets.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/refsets.js should pass jshint\', function() { \n      ok(true, \'adapters/refsets.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/adapters/refsets.jshint.js");

;eval("define(\"refset/tests/adapters/simple-members.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/simple-members.js should pass jshint\', function() { \n      ok(true, \'adapters/simple-members.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/adapters/simple-members.jshint.js");

;eval("define(\"refset/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/app.jshint.js");

;eval("define(\"refset/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/application.jshint.js");

;eval("define(\"refset/tests/controllers/dashboard.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/dashboard.js should pass jshint\', function() { \n      ok(true, \'controllers/dashboard.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/dashboard.jshint.js");

;eval("define(\"refset/tests/controllers/data.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/data.js should pass jshint\', function() { \n      ok(false, \'controllers/data.js should pass jshint.\\ncontrollers/data.js: line 151, col 21, \\\'failureResponse\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=refset/tests/controllers/data.jshint.js");

;eval("define(\"refset/tests/controllers/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/login.js should pass jshint\', function() { \n      ok(true, \'controllers/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/login.jshint.js");

;eval("define(\"refset/tests/controllers/news.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/news.js should pass jshint\', function() { \n      ok(true, \'controllers/news.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/news.jshint.js");

;eval("define(\"refset/tests/controllers/refsets.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/refsets.js should pass jshint\', function() { \n      ok(true, \'controllers/refsets.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets.jshint.js");

;eval("define(\"refset/tests/controllers/refsets/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/refsets\');\n    test(\'controllers/refsets/new.js should pass jshint\', function() { \n      ok(true, \'controllers/refsets/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets/new.jshint.js");

;eval("define(\"refset/tests/controllers/refsets/refset.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/refsets\');\n    test(\'controllers/refsets/refset.js should pass jshint\', function() { \n      ok(true, \'controllers/refsets/refset.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets/refset.jshint.js");

;eval("define(\"refset/tests/controllers/refsets/upload.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/refsets\');\n    test(\'controllers/refsets/upload.js should pass jshint\', function() { \n      ok(true, \'controllers/refsets/upload.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets/upload.jshint.js");

;eval("define(\"refset/tests/controllers/utilities.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/utilities.js should pass jshint\', function() { \n      ok(true, \'controllers/utilities.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/utilities.jshint.js");

;eval("define(\"refset/tests/helpers/date-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/date-format.js should pass jshint\', function() { \n      ok(true, \'helpers/date-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/date-format.jshint.js");

;eval("define(\"refset/tests/helpers/id-to-name.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/id-to-name.js should pass jshint\', function() { \n      ok(true, \'helpers/id-to-name.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/id-to-name.jshint.js");

;eval("define(\"refset/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'refset\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=refset/tests/helpers/resolver.js");

;eval("define(\"refset/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'refset/app\')[\'default\'];\n    var Router = require(\'refset/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION: false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=refset/tests/helpers/start-app.js");

;eval("define(\"refset/tests/helpers/yes-no-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/yes-no-format.js should pass jshint\', function() { \n      ok(true, \'helpers/yes-no-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/yes-no-format.jshint.js");

;eval("define(\"refset/tests/models/refset-editable-fields.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/refset-editable-fields.js should pass jshint\', function() { \n      ok(true, \'models/refset-editable-fields.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/models/refset-editable-fields.jshint.js");

;eval("define(\"refset/tests/models/refset.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/refset.js should pass jshint\', function() { \n      ok(true, \'models/refset.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/models/refset.jshint.js");

;eval("define(\"refset/tests/models/simple-refset-member.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/simple-refset-member.js should pass jshint\', function() { \n      ok(true, \'models/simple-refset-member.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/models/simple-refset-member.jshint.js");

;eval("define(\"refset/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/user.js should pass jshint\', function() { \n      ok(true, \'models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/models/user.jshint.js");

;eval("define(\"refset/tests/refset/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - refset/tests/helpers\');\n    test(\'refset/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'refset/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/refset/tests/helpers/resolver.jshint.js");

;eval("define(\"refset/tests/refset/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - refset/tests/helpers\');\n    test(\'refset/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'refset/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/refset/tests/helpers/start-app.jshint.js");

;eval("define(\"refset/tests/refset/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - refset/tests\');\n    test(\'refset/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'refset/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/refset/tests/test-helper.jshint.js");

;eval("define(\"refset/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/router.jshint.js");

;eval("define(\"refset/tests/routes/accessibility.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/accessibility.js should pass jshint\', function() { \n      ok(true, \'routes/accessibility.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/accessibility.jshint.js");

;eval("define(\"refset/tests/routes/cookie-policy.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/cookie-policy.js should pass jshint\', function() { \n      ok(true, \'routes/cookie-policy.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/cookie-policy.jshint.js");

;eval("define(\"refset/tests/routes/news.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/news.js should pass jshint\', function() { \n      ok(true, \'routes/news.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/news.jshint.js");

;eval("define(\"refset/tests/routes/privacy-statement.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/privacy-statement.js should pass jshint\', function() { \n      ok(true, \'routes/privacy-statement.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/privacy-statement.jshint.js");

;eval("define(\"refset/tests/routes/refsets.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/refsets.js should pass jshint\', function() { \n      ok(true, \'routes/refsets.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/refsets.jshint.js");

;eval("define(\"refset/tests/routes/refsets/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/refsets\');\n    test(\'routes/refsets/index.js should pass jshint\', function() { \n      ok(true, \'routes/refsets/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/refsets/index.jshint.js");

;eval("define(\"refset/tests/routes/refsets/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/refsets\');\n    test(\'routes/refsets/new.js should pass jshint\', function() { \n      ok(true, \'routes/refsets/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/refsets/new.jshint.js");

;eval("define(\"refset/tests/routes/refsets/refset.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/refsets\');\n    test(\'routes/refsets/refset.js should pass jshint\', function() { \n      ok(true, \'routes/refsets/refset.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/refsets/refset.jshint.js");

;eval("define(\"refset/tests/routes/site-map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/site-map.js should pass jshint\', function() { \n      ok(true, \'routes/site-map.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/site-map.jshint.js");

;eval("define(\"refset/tests/routes/terms-and-conditions.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/terms-and-conditions.js should pass jshint\', function() { \n      ok(true, \'routes/terms-and-conditions.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/terms-and-conditions.jshint.js");

;eval("define(\"refset/tests/test-helper\", \n  [\"refset/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=refset/tests/test-helper.js");
